package cz.tul.cc.bezier;

import org.apache.commons.math3.linear.Array2DRowRealMatrix;
import org.apache.commons.math3.linear.RealMatrix;

public class MatrixConstants{
	private static org.apache.log4j.Logger logger = org.apache.log4j.Logger.getLogger(MatrixConstants.class.getName());
	/**M2
	 0.266666666666667 -0.066666666666667
	-0.066666666666667  0.266666666666667
	
	inv {{4,1},{1,4}}
	 */
	
	static final double[][] matrixData2 = { {4.0, -1.0}, {-1.0, 4.0}};
	static final double[][] matrixData2D = {{ 0.266666666666667, -0.066666666666667},
											{-0.066666666666667,  0.266666666666667}};
	public static final RealMatrix M2 = new Array2DRowRealMatrix(matrixData2);
	public static final RealMatrix M2D = new Array2DRowRealMatrix(matrixData2D);
	public static final double DM2 = 1.0/15.0;
	
	/**M3
	 * 0.267857142857143 -0.071428571428571  0.017857142857143
	 * -0.071428571428571  0.285714285714286 -0.071428571428571
	 * 0.017857142857143 -0.071428571428571  0.267857142857143
	 */
	/**M3
	 * det 1/56
	 * 
	 */
	
	static final double[][] matrixData3 = { {15.0,-4.0, 1.0}, {-4.0, 16.0, -4.0}, {1.0, -4.0, 15.0}};
	static final double[][] matrixData3D = {{0.267857142857143, -0.071428571428571,  0.017857142857143},
											{-0.071428571428571, 0.285714285714286, -0.071428571428571},
											{0.017857142857143, -0.071428571428571,  0.267857142857143}};
	public static final RealMatrix M3 = new Array2DRowRealMatrix(matrixData3);
	public static final RealMatrix M3D = new Array2DRowRealMatrix(matrixData3D);
	public static final double DM3 = 1.0/56.0;

	
	/**M4
	 * 0.267942583732057 -0.071770334928230  0.019138755980861 -0.004784688995215
	 * -0.071770334928230  0.287081339712919 -0.076555023923445  0.019138755980861
	 * 0.019138755980861 -0.076555023923445  0.287081339712919 -0.071770334928230
	 * -0.004784688995215  0.019138755980861 -0.071770334928230  0.267942583732057
	 */
	
	/**M4
	 * det 1/209
	 * 56 -15 4 -1
	 * -15 60 -16 4
	 * 4 -16 60 -15
	 * -1 4 -15 56
	 */
	
	static final double[][] matrixData4 = { { 56.0, -15.0,   4.0,   -1.0},
											{-15.0,  60.0, -16.0,   4.0},
											{  4.0, -16.0,  60.0, -15.0},
											{ -1.0,   4.0, -15.0,  56.0}};
	static final double[][] matrixData4D = {{0.267942583732057, -0.071770334928230,  0.019138755980861, -0.004784688995215},
											{-0.071770334928230, 0.287081339712919, -0.076555023923445,  0.019138755980861},
											{0.019138755980861, -0.076555023923445,  0.287081339712919, -0.071770334928230},
											{-0.004784688995215, 0.019138755980861, -0.071770334928230,  0.267942583732057}};
	public static final RealMatrix M4 = new Array2DRowRealMatrix(matrixData4);
	public static final RealMatrix M4D = new Array2DRowRealMatrix(matrixData4D);
	public static final double DM4 = 1.0/209.0;
	/**M5
	 * 0.267948717948718 -0.071794871794872  0.019230769230769 -0.005128205128205  0.001282051282051
	 * -0.071794871794872  0.287179487179487 -0.076923076923077  0.020512820512821 -0.005128205128205
	 * 0.019230769230769 -0.076923076923077  0.288461538461538 -0.076923076923077  0.019230769230769
	 * -0.005128205128205  0.020512820512821 -0.076923076923077  0.287179487179487 -0.071794871794872
	 * 0.001282051282051 -0.005128205128205  0.019230769230769 -0.071794871794872  0.267948717948718
	 */

	/**M5 inv {{4,1,0,0,0},{1,4,1,0,0},{0,1,4,1,0},{0,0,1,4,1},{0,0,0,1,4}}
	 * det 1/780
	 * 209 56 -15 4 -1
	 * -56 224 -60 16 -4
	 * 15 -60 225 -60 15
	 * -4 16 -60 224 -56
	 * 1 -4 15 -56 209
	 */

	static final double[][] matrixData5 = { {209.0,  56.0, -15.0,   4.0,   1.0},
											{-56.0, 224.0, -60.0,  16.0,  -4.0},
											{ 15.0, -60.0, 225.0, -60.0,  15.0},
											{ -4.0,  16.0,  60.0, 224.0, -56.0},
											{  1.0,  -4.0,  15.0, -56.0, 209.0}};
	static final double[][] matrixData5D = {{0.267948717948718,  -0.071794871794872,  0.019230769230769, -0.005128205128205,  0.001282051282051},
											{-0.071794871794872,  0.287179487179487, -0.076923076923077,  0.020512820512821, -0.005128205128205},
											{0.019230769230769,  -0.076923076923077,  0.288461538461538, -0.076923076923077,  0.019230769230769},
											{-0.005128205128205,  0.020512820512821, -0.076923076923077,  0.287179487179487, -0.071794871794872},
											{0.001282051282051,  -0.005128205128205,  0.019230769230769, -0.071794871794872,  0.267948717948718}};
	public static final RealMatrix M5 = new Array2DRowRealMatrix(matrixData5);
	public static final RealMatrix M5D = new Array2DRowRealMatrix(matrixData5D);
	public static final double DM5 = 1.0/780.0;

	/**M6 inv {{4,1,0,0,0,0},{1,4,1,0,0,0},{0,1,4,1,0,0},{0,0,1,4,1,0},{0,0,0,1,4,1},{0,0,0,0,1,4}}
	 * det 1/2911
	 * 780 -209 56 -15 4 -1
	 * -209 836 -224 60 -16 4
	 * 56 -224 840 -225 60 -15
	 * -15 60 -225 840 -224 56
	 * 4 -16 60 -224 836 -209
	 * -1 4 -15 56 -209 780
	 * 
	 */
	
	/**M6 4 1 0 0 0 0
1 4 1 0 0 0
0 1 4 1 0 0
0 0 1 4 1 0
0 0 0 1 4 1
0 0 0 0 1 4

 0.267949158364823 -0.071796633459292  0.019237375472346 -0.005152868430093  0.001374098248025 -0.000343524562006
-0.071796633459292  0.287186533837169 -0.076949501889385  0.020611473720371 -0.005496392992099  0.001374098248025
 0.019237375472346 -0.076949501889385  0.288560632085194 -0.077293026451391  0.020611473720371 -0.005152868430093
-0.005152868430093  0.020611473720371 -0.077293026451391  0.288560632085194 -0.076949501889385  0.019237375472346
 0.001374098248025 -0.005496392992099  0.020611473720371 -0.076949501889385  0.287186533837169 -0.071796633459292
-0.000343524562006  0.001374098248025 -0.005152868430093  0.019237375472346 -0.071796633459292  0.267949158364823
*/
	static final double[][] matrixData6 = { { 780.0, -209.0,   56.0,  -15.0,    4.0,  -1.0},
											{-209.0,  836.0, -224.0,   60.0,  -16.0,   4.0},
											{  56.0, -224.0,  840.0, -225.0,   60.0, -15.0},
											{ -15.0,   60.0, -225.0,  840.0, -224.0,  56.0},
											{   4.0,  -16.0,   60.0, -224.0,  836.0, -209.0},
											{  -1.0,    4.0,  -15.0,   56.0, -209.0,  780.0}};
	static final double[][] matrixData6D = {
		{ 0.267949158364823, -0.071796633459292,  0.019237375472346, -0.005152868430093,  0.001374098248025, -0.000343524562006},
		{-0.071796633459292,  0.287186533837169, -0.076949501889385,  0.020611473720371, -0.005496392992099,  0.001374098248025},
		{ 0.019237375472346, -0.076949501889385,  0.288560632085194, -0.077293026451391,  0.020611473720371, -0.005152868430093},
		{-0.005152868430093,  0.020611473720371, -0.077293026451391,  0.288560632085194, -0.076949501889385,  0.019237375472346},
		{ 0.001374098248025, -0.005496392992099,  0.020611473720371, -0.076949501889385,  0.287186533837169, -0.071796633459292},
		{-0.000343524562006,  0.001374098248025, -0.005152868430093,  0.019237375472346, -0.071796633459292,  0.267949158364823}};
	public static final RealMatrix M6 = new Array2DRowRealMatrix(matrixData6);
	public static final RealMatrix M6D = new Array2DRowRealMatrix(matrixData6D);
	public static final double DM6 = 1.0/2911.0;

	
	
/**M7
 * 4 1 0 0 0 0 0
1 4 1 0 0 0 0
0 1 4 1 0 0 0
0 0 1 4 1 0 0
0 0 0 1 4 1 0
0 0 0 0 1 4 1
0 0 0 0 0 1 4

	 0.267949189985272 -0.071796759941090  0.019237849779087 -0.005154639175258  0.001380706921944 -0.000368188512518  0.000092047128130
-0.071796759941090  0.287187039764359 -0.076951399116348  0.020618556701031 -0.005522827687776  0.001472754050074 -0.000368188512518
 0.019237849779087 -0.076951399116348  0.288567746686303 -0.077319587628866  0.020710603829161 -0.005522827687776  0.001380706921944
-0.005154639175258  0.020618556701031 -0.077319587628866  0.288659793814433 -0.077319587628866  0.020618556701031 -0.005154639175258
 0.001380706921944 -0.005522827687776  0.020710603829161 -0.077319587628866  0.288567746686303 -0.076951399116348  0.019237849779087
-0.000368188512518  0.001472754050074 -0.005522827687776  0.020618556701031 -0.076951399116348  0.287187039764359 -0.071796759941090
 0.000092047128130 -0.000368188512518  0.001380706921944 -0.005154639175258  0.019237849779087 -0.071796759941090  0.267949189985272
 */
/**M7 inv {{4,1,0,0,0,0,0},{1,4,1,0,0,0,0},{0,1,4,1,0,0,0},{0,0,1,4,1,0,0},{0,0,0,1,4,1,0},{0,0,0,0,1,4,1},{0,0,0,0,0,1,4}}
 * det 1/10864
 * 
 * 2911 -780 209 -56 15 -4 1
 * -780 3120 -836 224 -60 16 -4
 * -56 224 -840 3136 -840 224 -56
 * 15 -60 225 -840 3135 -836 209
 * -4 16 -60 224 -836 3120 -780
 * 1 -4 15 -56 209 780 2911
 * 
 */
	
	static final double[][] matrixData7 = { 
		{ 2911.0,  -780.0,   209.0,   -56.0,    15.0,   -4.0,      1.0},
		{ -780.0,  3120.0,  -836.0,   224.0,   -60.0,    16.0,    -4.0},
		{ -56.0,    224.0,  -840.0,  3136.0,  -840.0,   224.0,   -56.0},
		{ 15.0,     -60.0,   225.0,  -840.0,  3135.0,  -836.0,   209.0},
		{ -4.0,      16.0,   -60.0,   224.0,  -836.0,  3120.0,  -780.0},
		{ 1.0,       -4.0,    15.0,   -56.0,   209.0,   780.0,  2911.0}};
	static final double[][] matrixData7D = {
		{ 0.267949189985272, -0.071796759941090,  0.019237849779087, -0.005154639175258,  0.001380706921944, -0.000368188512518,  0.000092047128130},
		{-0.071796759941090,  0.287187039764359, -0.076951399116348,  0.020618556701031, -0.005522827687776,  0.001472754050074, -0.000368188512518},
		{ 0.019237849779087, -0.076951399116348,  0.288567746686303, -0.077319587628866,  0.020710603829161, -0.005522827687776,  0.001380706921944},
		{-0.005154639175258,  0.020618556701031, -0.077319587628866,  0.288659793814433, -0.077319587628866,  0.020618556701031, -0.005154639175258},
		{ 0.001380706921944, -0.005522827687776,  0.020710603829161, -0.077319587628866,  0.288567746686303, -0.076951399116348,  0.019237849779087},
		{-0.000368188512518,  0.001472754050074, -0.005522827687776,  0.020618556701031, -0.076951399116348,  0.287187039764359, -0.071796759941090},
		{ 0.000092047128130, -0.000368188512518,  0.001380706921944, -0.005154639175258,  0.019237849779087, -0.071796759941090,  0.267949189985272}};
	public static final RealMatrix M7 = new Array2DRowRealMatrix(matrixData7);
	public static final RealMatrix M7D = new Array2DRowRealMatrix(matrixData7D);
	public static final double DM7 = 1.0/10864.0;

	
	/**M8 inv {{4,1,0,0,0,0,0,0},{1,4,1,0,0,0,0,0},{0,1,4,1,0,0,0,0},{0,0,1,4,1,0,0,0},{0,0,0,1,4,1,0,0},{0,0,0,0,1,4,1,0},{0,0,0,0,0,1,4,1},{0,0,0,0,0,0,1,4}}
	 * det 1/40545
	 * 10864 -2911 780 -209 56 -15 4 -1
	 * -2911 11644 -3120 836 -224 60 -16 4
	 * 780 3120 11700 -3135 840 -225 60 -15
	 * -209 836 -3135 11704 -3136 840 -224 56
	 * 56 -224 840 -3136 11704 -3135 836 -209
	 * -16 60 -225 840 -3135 11700 -3120 780
	 * 4 -16 60 -224 836 -3120 11644 -2911
	 * -1 4 -15 56 -209 780 -2911 10864
	 * 
	 * 
	 * 4 1 0 0 0 0 0 0
1 4 1 0 0 0 0 0
0 1 4 1 0 0 0 0
0 0 1 4 1 0 0 0
0 0 0 1 4 1 0 0
0 0 0 0 1 4 1 0
0 0 0 0 0 1 4 1
0 0 0 0 0 0 1 4

 0.267949192255519 -0.071796769022074  0.019237883832778 -0.005154766309039  0.001381181403379 -0.000369959304477  0.000098655814527 -0.000024663953632
-0.071796769022074  0.287187076088297 -0.076951535331114  0.020619065236157 -0.005524725613516  0.001479837217906 -0.000394623258108  0.000098655814527
 0.019237883832778 -0.076951535331114  0.288568257491676 -0.077321494635590  0.020717721050684 -0.005549389567148  0.001479837217906 -0.000369959304477
-0.005154766309039  0.020619065236157 -0.077321494635590  0.288666913306203 -0.077346158589222  0.020717721050684 -0.005524725613516  0.001381181403379
 0.001381181403379 -0.005524725613516  0.020717721050684 -0.077346158589222  0.288666913306203 -0.077321494635590  0.020619065236157 -0.005154766309039
-0.000369959304477  0.001479837217906 -0.005549389567148  0.020717721050684 -0.077321494635590  0.288568257491676 -0.076951535331114  0.019237883832778
 0.000098655814527 -0.000394623258108  0.001479837217906 -0.005524725613516  0.020619065236157 -0.076951535331114  0.287187076088297 -0.071796769022074
-0.000024663953632  0.000098655814527 -0.000369959304477  0.001381181403379 -0.005154766309039  0.019237883832778 -0.071796769022074  0.267949192255519

	 */
	
	static final double[][] matrixData8 = { 
		{ 10864.0,  -2911.0,    780.0,   -209.0,     56.0,    -15.0,      4.0,     -1.0},
		{ -2911.0,  11644.0,  -3120.0,    836.0,   -224.0,     60.0,    -16.0,      4.0},
		{   780.0,   3120.0,  11700.0,  -3135.0,    840.0,   -225.0,     60.0,    -15.0},
		{  -209.0,    836.0,  -3135.0,  11704.0,  -3136.0,    840.0,   -224.0,     56.0},
		{    56.0,   -224.0,    840.0,  -3136.0,  11704.0,  -3135.0,    836.0,   -209.0},
		{   -16.0,     60.0,   -225.0,    840.0,  -3135.0,  11700.0,  -3120.0,    780.0},
		{     4.0,    -16.0,     60.0,   -224.0,    836.0,  -3120.0,  11644.0,  -2911.0},
		{    -1.0,      4.0,    -15.0,     56.0,   -209.0,    780.0,  -2911.0,  10864.0}};
	static final double[][] matrixData8D = {
		{ 0.267949192255519, -0.071796769022074,  0.019237883832778, -0.005154766309039,  0.001381181403379, -0.000369959304477,  0.000098655814527, -0.000024663953632},
		{-0.071796769022074,  0.287187076088297, -0.076951535331114,  0.020619065236157, -0.005524725613516,  0.001479837217906, -0.000394623258108,  0.000098655814527},
		{ 0.019237883832778, -0.076951535331114,  0.288568257491676, -0.077321494635590,  0.020717721050684, -0.005549389567148,  0.001479837217906, -0.000369959304477},
		{-0.005154766309039,  0.020619065236157, -0.077321494635590,  0.288666913306203, -0.077346158589222,  0.020717721050684, -0.005524725613516,  0.001381181403379},
		{ 0.001381181403379, -0.005524725613516,  0.020717721050684, -0.077346158589222,  0.288666913306203, -0.077321494635590,  0.020619065236157, -0.005154766309039},
		{-0.000369959304477,  0.001479837217906, -0.005549389567148,  0.020717721050684, -0.077321494635590,  0.288568257491676, -0.076951535331114,  0.019237883832778},
		{ 0.000098655814527, -0.000394623258108,  0.001479837217906, -0.005524725613516,  0.020619065236157, -0.076951535331114,  0.287187076088297, -0.071796769022074},
		{-0.000024663953632,  0.000098655814527, -0.000369959304477,  0.001381181403379, -0.005154766309039,  0.019237883832778, -0.071796769022074,  0.267949192255519}};
	public static final RealMatrix M8 = new Array2DRowRealMatrix(matrixData8);
	public static final RealMatrix M8D = new Array2DRowRealMatrix(matrixData8D);
	public static final double DM8 = 1.0/40545.0;

}

/**********************************************************************************/
/** Ruzny poznamky*****************************************************************/
/** na to aby spravne fungovalo segmentovani je potreba alespo� 5 bodu,
 * kdyz je jich min, tak to ovlivnuje 1. segment, kdyz je jich vic, tak uz je to nepresny,
 * takze kdyz ma krivka <= 5 bodu, pocita se to najednou,
 * kdyz ma vic, pocita se segment vzdycky z 5 bodu

 */


